/// <reference path="../../../lib/react-global.d.ts" />

import app from "../../App"; // TODO refactor | autogenerated

import Unit from "../../Unit";
import UnitWrapper from "../unit/UnitWrapper";
import Battle from "../../Battle";
import AbilityTemplate from "../../templateinterfaces/AbilityTemplate";
import UnitBattleSide from "../../UnitBattleSide";


interface PropTypes extends React.Props<any>
{
  row: Unit[];
  rowIndexInOwnFormation: number;
  battle?: Battle;
  facesLeft: boolean;
  activeUnit?: Unit;
  activeTargets?: {[id: number]: AbilityTemplate[];}; 

  hoveredUnit?: Unit;
  hoveredAbility?: AbilityTemplate;

  targetsInPotentialArea?: Unit[];
  activeEffectUnits?: Unit[];
  isDraggable?: boolean;
  
  onUnitClick?: (unit: Unit) => void;
  onMouseUp?: (position: number[]) => void;
  handleMouseLeaveUnit?: (e: React.MouseEvent) => void;
  handleMouseEnterUnit?: (unit: Unit) => void;
  onDragStart?: (unit: Unit) => void;
  onDragEnd?: (dropSuccessful?: boolean) => void;
}

interface StateType
{
}

export class FormationRowComponent extends React.Component<PropTypes, StateType>
{
  displayName: string = "FormationRow";


  state: StateType;

  constructor(props: PropTypes)
  {
    super(props);
  }
  
  render()
  {
    var row: Unit[] = this.props.row;

    var side: UnitBattleSide = this.props.facesLeft ? "side2" : "side1";
    var absoluteRowIndex = side === "side1" ?
      this.props.rowIndexInOwnFormation :
      this.props.rowIndexInOwnFormation + app.moduleData.ruleSet.battle.rowsPerFormation;

    var units: React.ReactElement<any>[] = [];

    for (let i = 0; i < row.length; i++)
    {
      units.push(UnitWrapper(
      {
        key: i,
        unit: row[i],
        position: [absoluteRowIndex, i],
        battle: this.props.battle,
        facesLeft: this.props.facesLeft,
        activeUnit: this.props.activeUnit,
        activeTargets: this.props.activeTargets,
        hoveredUnit: this.props.hoveredUnit,
        hoveredAbility: this.props.hoveredAbility,
        handleMouseLeaveUnit: this.props.handleMouseLeaveUnit,
        handleMouseEnterUnit: this.props.handleMouseEnterUnit,
        targetsInPotentialArea: this.props.targetsInPotentialArea,
        activeEffectUnits: this.props.activeEffectUnits,
        onMouseUp: this.props.onMouseUp,
        onUnitClick: this.props.onUnitClick,
        isDraggable: this.props.isDraggable,
        onDragStart: this.props.onDragStart,
        onDragEnd: this.props.onDragEnd,
      }));
    }

    return(
      React.DOM.div({className: "battle-formation-row"},
        units
      )
    );
  }
}

const Factory: React.Factory<PropTypes> = React.createFactory(FormationRowComponent);
export default Factory;
