/// <reference path="../../../src/templateinterfaces/iobjectivetemplate.d.ts" />

import ObjectiveTemplate from "../../../src/templateinterfaces/ObjectiveTemplate.d.ts"; // TODO refactor | autogenerated

import Objective from "../../../src/mapai/Objective.ts"; // TODO refactor | autogenerated

import Star from "../../../src/Star.ts"; // TODO refactor | autogenerated

import Unit from "../../../src/Unit.ts"; // TODO refactor | autogenerated



export var cleanUpPirates: ObjectiveTemplate =
{
  key: "cleanUpPirates",
  movePriority: 3,
  preferredUnitComposition:
  {
    combat: 0.65,
    defence: 0.25,
    utility: 0.1
  },
  moveRoutineFN: musterAndAttackRoutine.bind(null, independentTargetFilter),
  unitDesireFN: defaultUnitDesireFN,
  unitFitFN: defaultUnitFitFN,
  creatorFunction: function(grandStrategyAI: GrandStrategyAI,
    mapEvaluator: MapEvaluator, objectivesAI: ObjectivesAI)
  {
    var basePriority = grandStrategyAI.desireForExpansion;

    var ownedStarsWithPirates = mapEvaluator.player.controlledLocations.filter(function(star: Star)
    {
      return star.getIndependentUnits().length > 0 && !star.getSecondaryController();
    });

    var evaluations = mapEvaluator.evaluateIndependentTargets(ownedStarsWithPirates);
    var scores = mapEvaluator.scoreIndependentTargets(evaluations);

    var template = Modules.DefaultModule.Objectives.cleanUpPirates;

    return makeObjectivesFromScores(template, scores, basePriority);
  },
  unitsToFillObjectiveFN: getUnitsToBeatImmediateTarget
}
